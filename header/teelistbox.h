// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


// Dispatch interfaces referenced by this interface
class CSeriesGroup;
class CTeeListBoxSection;
class CStrings;

/////////////////////////////////////////////////////////////////////////////
// CTeeListBox wrapper class

class CTeeListBox : public CWnd
{
protected:
	DECLARE_DYNCREATE(CTeeListBox)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0x30b284d6, 0xad8b, 0x4b2e, { 0x98, 0xa1, 0x7b, 0x92, 0x13, 0x83, 0x72, 0xb4 } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName,
		LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect,
		CWnd* pParentWnd, UINT nID,
		CCreateContext* pContext = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect, CWnd* pParentWnd, UINT nID,
		CFile* pPersist = NULL, BOOL bStorage = FALSE,
		BSTR bstrLicKey = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); }

// Attributes
public:

// Operations
public:
	void SetChart(LPDISPATCH newValue);
	void SetChartLink(long nNewValue);
	void AboutBox();
	unsigned long GetColor();
	void SetColor(unsigned long newValue);
	void UpdateSeries();
	long GetSelectedSeries();
	void SetSelectedSeries(long nNewValue);
	BOOL GetShowActive();
	void SetShowActive(BOOL bNewValue);
	BOOL GetShowColor();
	void SetShowColor(BOOL bNewValue);
	BOOL GetShowTitle();
	void SetShowTitle(BOOL bNewValue);
	BOOL GetShowIcon();
	void SetShowIcon(BOOL bNewValue);
	CSeriesGroup GetSeriesGroup();
	void SetSeriesGroup(LPDISPATCH newValue);
	long GetCheckStyle();
	void SetCheckStyle(long nNewValue);
	void ShowEditor();
	void HideEditor();
	long GetItemHeight();
	void SetItemHeight(long nNewValue);
	void ClearItems();
	void Repaint();
	BOOL GetSorted();
	void SetSorted(BOOL bNewValue);
	BOOL GetAskDelete();
	void SetAskDelete(BOOL bNewValue);
	BOOL GetAllowDeleteSeries();
	void SetAllowDeleteSeries(BOOL bNewValue);
	BOOL GetAllowAddSeries();
	void SetAllowAddSeries(BOOL bNewValue);
	CTeeListBoxSection GetSections(long Index);
	BOOL GetFontSeriesColor();
	void SetFontSeriesColor(BOOL bNewValue);
	CStrings GetItems();
};
